{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","dataArr","className","styles","container","Grid","spacing","justify","map","idx","value","name","detail","split","slice","key","item","component","Card","xs","md","classNames","card","CardContent","Typography","color","gutterBottom","charAt","toUpperCase","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backGroundColor","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.34df0e1c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  const dataArr = [confirmed, recovered, deaths];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {dataArr.map(({ value, detail }, idx) => {\r\n          let name = detail.split(\"/\").slice(-1)[0];\r\n          return (\r\n            <Grid\r\n              key={idx}\r\n              item\r\n              component={Card}\r\n              xs={12}\r\n              md={3}\r\n              className={classNames(styles.card, styles[name])}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  {name === \"confirmed\"\r\n                    ? \"Infected\"\r\n                    : name.charAt(0).toUpperCase() + name.slice(1)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp start={0} end={value} duration={2.5} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  NUMBER OF{\" \"}\r\n                  {name === \"confirmed\" ? \"Infected\" : name.toUpperCase()} CASES\r\n                  OF COVID-19\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableURL = url;\r\n\r\n  if (country) {\r\n    changeableURL = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableURL);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backGroundColor: \"rgb(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setfetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setfetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setfetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, idx) => (\r\n          <option key={idx} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport coronaImage from \"./images/image.png\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__K7FpB\",\"card\":\"Cards_card__1iz2k\",\"confirmed\":\"Cards_confirmed__3EkjW\",\"recovered\":\"Cards_recovered__1HDJ3\",\"deaths\":\"Cards_deaths__291_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2p4My\",\"image\":\"App_image__22YZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__V0gGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3_lW0\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}